function scoreAssignmentLook1()
{
    for(let i = 1; i <= sizeOfBoard; i++)
    {
        moveScore[i] = 0;
    }
    for(let i = 1; i <= sizeOfBoard; i++)
    {
        movesIndex[i] = i;
    }
    if(turn == green)
    {
        for(let i = 1 ; i <= sizeOfBoard ; i ++)
        {
            ///calculating how many square does this move secure for green
            ///check if possition is available
            if(board[i] == free && board[(i + 12) % 144] == free && board[(i + 24) % 144] == free && board[(i + 36) % 144] == free)
            {
               /// check the board for how many posibilites does purple have if move i is chosen
               let numberOfPosibilitites = 0;
               for(let j = 1; j <= sizeOfBoard; j++)
               {
                    if(j % 12 == 0 && board[j] == free && board[j + 1 - 12] == free && board[j + 2 - 12] == free && board[j + 3 - 12] == free)
                    {
                        numberOfPosibilitites++;
                    }
                    if( j % 12 <= 9 && j % 12 != 0 && board[j] == free && board[j + 1] == free && board[j + 2] == free && board[j + 3] == free)
                    {
                        numberOfPosibilitites++;
                    }
                    if(j % 12 == 10 && board[j] == free && board[j + 1] == free && board[j + 2] == free && board[j + 3 - 12] == free)
                    {
                        numberOfPosibilitites++;
                    }
                    if(j % 12 == 11 && board[j] == free && board[j + 1] == free && board[j + 2 - 12] == free && board[j + 3 - 12] == free)
                    {
                        numberOfPosibilitites++;
                    }
                }
                moveScore[i] = numberOfPosibilitites;     
            }
           
        }
    }
    if(turn == purple)
    {
        
        for(let i = 1 ; i <= sizeOfBoard ; i ++)
        {
            let numberOfPosibilitites = 0;
            if(i % 12 == 0)
            {
                if(board[i] == free && board[i + 1 - 12] == free && board[i + 2 - 12] == free && board[i + 3 - 12] == free)
                {
                   for(let j = 1; j <= sizeOfBoard; j++)
                   {
                        if(board[j] == free && board[(j + 12) % 144] == free && board[(j + 24) % 144] == free && board[(j + 36) % 144] == free)
                        {
                            numberOfPosibilitites++;
                        }
                   }
                }
            }
            if(i % 12 <= 9 && i % 12 != 0)
            {
                if(board[i] == free && board[i + 1] == free && board[i + 2] == free && board[i + 3] == free)
                {
                    for(let j = 1; j <= sizeOfBoard; j++)
                     {
                        if(board[j] == free && board[(j + 12) % 144] == free && board[(j + 24) % 144] == free && board[(j + 36) % 144] == free)
                        {
                            numberOfPosibilitites++;
                        }
                     }
                }
                
            }
            if(i % 12 == 10)
            {
                if(board[i] == free && board[i + 1] == free && board[i + 2] == free && board[i + 3 - 12] == free)
                {
                    for(let j = 1; j <= sizeOfBoard; j++)
                   {
                        if(board[j] == free && board[(j + 12) % 144] == free && board[(j + 24) % 144] == free && board[(j + 36) % 144] == free)
                        {
                            numberOfPosibilitites++;
                        }
                   }
                }
                
            }
            if(i % 12 == 11)
            {
                if(board[i] == free && board[i + 1] == free && board[i + 2 - 12] == free && board[i + 3 - 12] == free)
                {
                    for(let j = 1; j <= sizeOfBoard; j++)
                    {
                         if(board[j] == free && board[(j + 12) % 144] == free && board[(j + 24) % 144] == free && board[(j + 36) % 144] == free)
                         {
                             numberOfPosibilitites++;
                         }
                    }
                }
                
            }
            moveScore[i] = numberOfPosibilitites;
        }
    }
    
}